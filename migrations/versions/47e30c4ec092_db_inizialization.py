"""db inizialization

Revision ID: 47e30c4ec092
Revises: 
Create Date: 2022-04-04 11:17:13.176273

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision = '47e30c4ec092'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('indirizzo',
    sa.Column('id_alunno', sa.Integer(), nullable=False),
    sa.Column('osm_indirizzo_ref', sa.String(length=128), nullable=True),
    sa.Column('osm_road', sa.String(length=128), nullable=True),
    sa.Column('osm_house_number', sa.String(length=128), nullable=True),
    sa.Column('osm_house_number_dev', sa.String(length=128), nullable=True),
    sa.Column('osm_postcode', sa.String(length=128), nullable=True),
    sa.Column('osm_suburb', sa.String(length=128), nullable=True),
    sa.Column('osm_city', sa.String(length=128), nullable=True),
    sa.Column('osm_lat', sa.Float(), nullable=True),
    sa.Column('osm_lon', sa.Float(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('id_alunno')
    )
    op.create_index('idx_indirizzo_geom_dev', 'indirizzo', ['geom'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password_clear', sa.String(length=128), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=64), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('interest', sa.Text(), nullable=True),
    sa.Column('member_since', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=False)
    op.create_table('alunni',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('anno_ref', sa.String(length=128), nullable=True),
    sa.Column('id_alunno', sa.Integer(), nullable=True),
    sa.Column('sesso', sa.String(length=128), nullable=True),
    sa.Column('luogo_nascita', sa.String(length=128), nullable=True),
    sa.Column('provincia_nascita', sa.String(length=128), nullable=True),
    sa.Column('stato_nascita', sa.String(length=128), nullable=True),
    sa.Column('descr_cittadinanza', sa.String(length=128), nullable=True),
    sa.Column('matricola', sa.String(length=128), nullable=True),
    sa.Column('comune_residenza', sa.String(length=128), nullable=True),
    sa.Column('provincia_residenza', sa.String(length=128), nullable=True),
    sa.Column('indirizzo_residenza', sa.String(length=128), nullable=True),
    sa.Column('cap_residenza', sa.String(length=128), nullable=True),
    sa.Column('stato_alunno', sa.String(length=128), nullable=True),
    sa.Column('tipologia_stato_alunno', sa.String(length=128), nullable=True),
    sa.Column('data_inizio', sa.DateTime(), nullable=True),
    sa.Column('data_fine', sa.DateTime(), nullable=True),
    sa.Column('numero_volte_iscrizione', sa.Integer(), nullable=True),
    sa.Column('fornito_di', sa.String(length=128), nullable=True),
    sa.Column('scuola_provenienza', sa.String(length=128), nullable=True),
    sa.Column('posizione', sa.String(length=128), nullable=True),
    sa.Column('religione_cattolica', sa.String(length=128), nullable=True),
    sa.Column('attivita_alternativa', sa.String(length=128), nullable=True),
    sa.Column('educazione_fisica', sa.String(length=128), nullable=True),
    sa.Column('esito_finale', sa.String(length=128), nullable=True),
    sa.Column('esito_sospeso', sa.String(length=128), nullable=True),
    sa.Column('media_voti', sa.Float(), nullable=True),
    sa.Column('scuola_trasferimento', sa.String(length=128), nullable=True),
    sa.Column('anno_corso', sa.Integer(), nullable=True),
    sa.Column('anno_sigla', sa.Integer(), nullable=True),
    sa.Column('sezione', sa.String(length=128), nullable=True),
    sa.Column('classe', sa.String(length=128), nullable=True),
    sa.Column('indirizzo_studi', sa.String(length=128), nullable=True),
    sa.Column('classificazione_ministeriale', sa.String(length=128), nullable=True),
    sa.Column('indirizzo_ministeriale', sa.String(length=128), nullable=True),
    sa.Column('sede', sa.String(length=128), nullable=True),
    sa.Column('scuola', sa.String(length=128), nullable=True),
    sa.Column('cod_meccanografico', sa.String(length=128), nullable=True),
    sa.Column('piano_studio', sa.String(length=128), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('data_create', sa.DateTime(), nullable=True),
    sa.Column('data_update', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_alunno'], ['indirizzo.id_alunno'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.drop_table('spatial_ref_sys')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('spatial_ref_sys',
    # sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    # sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    # )
    op.drop_table('alunni')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index('idx_indirizzo_geom', table_name='indirizzo', postgresql_using='gist', postgresql_ops={})
    op.drop_table('indirizzo')
    # ### end Alembic commands ###
